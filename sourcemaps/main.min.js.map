{"version":3,"sources":["b-header.js","c-sliders.js","d-parallax.js","e-draw.js","f-scroll-card.js","i-file.js","n-modal.js","01_main.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjhIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"../components/main.min.js","sourcesContent":["$(\".burger\").click(function () {\r\n    $(\".header\").toggleClass(\"_open\")\r\n    $(\"body\").toggleClass(\"fixed-body\")\r\n})\r\n\r\n$(window).scroll(function(){\r\n    setFixHeader()\r\n});\r\n$(window).resize(function(){\r\n    setFixHeader()\r\n});\r\n\r\n\r\nsetFixHeader()\r\n\r\n\r\nfunction setFixHeader() {\r\n    let headerHeight = getHeaderHeight()\r\n    let st = $(this).scrollTop();\r\n    if(st > headerHeight){\r\n        $(\".header\").addClass(\"_fix\")\r\n    } else{\r\n        $(\".header\").removeClass(\"_fix\")\r\n    }\r\n}\r\n\r\nfunction getHeaderHeight() {\r\n    let header = document.querySelector(\".header\")\r\n    if(!header){\r\n        return\r\n    }\r\n    return header.getBoundingClientRect().height\r\n}\r\n","function Sliders() {\r\n    let SlidersArray = []\r\n\r\n    let sliders = document.querySelectorAll(\".slider\")\r\n    sliders.forEach((slider,index) => {\r\n        slider.setAttribute(\"data-slider-id\",index)\r\n\r\n        SlidersArray[index] = new Swiper(`.slider[data-slider-id=\"${index}\"] .swiper-container`, {\r\n            slidesPerView: \"auto\",\r\n            spaceBetween: 0,\r\n            watchSlidesProgress: true,\r\n            preventClicks :true,\r\n            a11y: false,\r\n            observer: true,\r\n            observeParents: true,\r\n            observeSlideChildren: true,\r\n\r\n            navigation: {\r\n                nextEl: `.slider[data-slider-id=\"${index}\"] .swiper-button-next`,\r\n                prevEl: `.slider[data-slider-id=\"${index}\"] .swiper-button-prev`,\r\n            },\r\n            pagination: {\r\n                el: `.slider[data-slider-id=\"${index}\"] .swiper-pagination`,\r\n                type: 'bullets',\r\n                clickable: true,\r\n            },\r\n        })\r\n    })\r\n}\r\n\r\nfunction portfolioSliders() {\r\n    let SlidersArray = []\r\n\r\n    let sliders = document.querySelectorAll(\".portfolio-slider\")\r\n    sliders.forEach((slider,index) => {\r\n        let reverse = slider.classList.contains(\"_reverse\")\r\n\r\n        slider.setAttribute(\"data-slider-id\",index)\r\n\r\n        let autoplayOptions = {\r\n            delay: 0,\r\n            reverseDirection: reverse,\r\n            // pauseOnMouseEnter: true,\r\n            // disableOnInteraction: false\r\n        }\r\n\r\n        SlidersArray[index] = new Swiper(`.portfolio-slider[data-slider-id=\"${index}\"] .swiper-container`, {\r\n            slidesPerView: \"auto\",\r\n            spaceBetween: 0,\r\n            speed: 2000,\r\n            loop: true,\r\n            loopAdditionalSlides: 20,\r\n            allowTouchMove: false,\r\n            autoplay: autoplayOptions,\r\n            on: {\r\n                init() {\r\n                    this.el.addEventListener('mouseenter', () => {\r\n                        this.autoplay.stop();\r\n                    });\r\n                    this.el.addEventListener('mouseleave', () => {\r\n                        this.autoplay.start();\r\n                    });\r\n                }\r\n            },\r\n        })\r\n\r\n        // slider.onmouseenter = function () {\r\n        //     SlidersArray[index].autoplay = false\r\n        // }\r\n    })\r\n}\r\n\r\nfunction gallery() {\r\n    let SlidersArray = []\r\n\r\n    let sliders = document.querySelectorAll(\".gallery\")\r\n    sliders.forEach((slider,index) => {\r\n        slider.setAttribute(\"data-slider-id\",index)\r\n        let gallery = {\r\n            mySwiper: {},\r\n            mySwiper2: {}\r\n        }\r\n\r\n        gallery.mySwiper = new Swiper(`.gallery[data-slider-id=\"${index}\"] .mySwiper`, {\r\n            spaceBetween: 0,\r\n            slidesPerView: \"auto\",\r\n            freeMode: true,\r\n            watchSlidesProgress: true,\r\n            direction: \"vertical\",\r\n            breakpoints: {\r\n                320: {\r\n                    direction: \"horizontal\",\r\n                },\r\n                992: {\r\n                    direction: \"vertical\",\r\n                }\r\n            }\r\n        });\r\n        gallery.mySwiper2 = new Swiper(`.gallery[data-slider-id=\"${index}\"] .mySwiper2`, {\r\n            spaceBetween: 0,\r\n            direction: \"vertical\",\r\n            loop: true,\r\n            navigation: {\r\n                nextEl: `.gallery[data-slider-id=\"${index}\"] .swiper-button-next`,\r\n                prevEl: `.gallery[data-slider-id=\"${index}\"] .swiper-button-prev`,\r\n            },\r\n            thumbs: {\r\n                swiper:  gallery.mySwiper,\r\n            },\r\n            breakpoints: {\r\n                320: {\r\n                    direction: \"horizontal\",\r\n                },\r\n                992: {\r\n                    direction: \"vertical\",\r\n                }\r\n            }\r\n        });\r\n\r\n        SlidersArray[index] = gallery\r\n    })\r\n\r\n}\r\n\r\n\r\nSliders()\r\ngallery()\r\nportfolioSliders()\r\n","const parallaxContainers = document.querySelectorAll(\".parallax-container\")\r\n\r\nparallaxContainers.forEach(container => {\r\n    const parallaxItems = container.querySelectorAll(\".parallax-item\")\r\n    parallaxItems.forEach(item => {\r\n        const forX = 10;\r\n        const forY = 30;\r\n        const speed = 0.15\r\n\r\n        let positionX = 0\r\n        let positionY = 0\r\n        let cordXPercent = 0\r\n        let cordYPercent = 0\r\n\r\n        function setMouseParallaxStyle() {\r\n            const distX = cordXPercent - positionX\r\n            const distY = cordYPercent - positionY\r\n\r\n            positionX = positionX + (distX * speed)\r\n            positionY = positionY + (distY * speed)\r\n\r\n            item.style.cssText = `transform: translate(${positionX/forX}%,${positionY/forY}%);`\r\n\r\n            requestAnimationFrame(setMouseParallaxStyle)\r\n        }\r\n\r\n        setMouseParallaxStyle()\r\n\r\n        container.addEventListener(\"mousemove\", function (e) {\r\n            const parallaxWidth = container.offsetWidth\r\n            const parallaxHeight = container.offsetHeight\r\n\r\n            const cordX = e.pageX - parallaxWidth/2;\r\n            const cordY = e.pageY - parallaxHeight/2;\r\n\r\n            cordXPercent = cordX / parallaxWidth * 100\r\n            cordYPercent = cordY / parallaxHeight * 100\r\n        })\r\n    })\r\n\r\n\r\n})\r\n","function drawMap(id) {\r\n    let path = document.querySelector(id);\r\n    if(!path){\r\n        return\r\n    }\r\n    let pathLength = path.getTotalLength();\r\n    path.style.strokeDasharray = pathLength + ' ' + pathLength;\r\n    path.style.strokeDashoffset = pathLength;\r\n\r\n    window.addEventListener(\"scroll\", function(e) {\r\n        let mapHeight = $(\".map\").height()\r\n        let scrollPercentage = ($(window).scrollTop() - $('.map').offset().top + (mapHeight * .25)) / mapHeight\r\n        let drawLength = pathLength * scrollPercentage;\r\n        path.style.strokeDashoffset = pathLength - drawLength;\r\n    });\r\n}\r\n\r\ndrawMap(\"#red-path\")\r\ndrawMap(\"#red-path2\")\r\n\r\n\r\n\r\n","function s(o, e, t) {\r\n    return Math.min(Math.max(o, e), t);\r\n}\r\nfunction p({ from: o, to: e, percentage: t, unit: n }) {\r\n    return o + (e - o) * t + (n || \"\");\r\n}\r\nconst a = {\r\n    offsetBottom: 0,\r\n    offsetTop: 0,\r\n    offsetRight: 0,\r\n    offsetLeft: 0,\r\n    addWrapper: !1,\r\n    wrapperClass: \"\",\r\n    container: document.documentElement\r\n};\r\nclass r {\r\n    static Container(e = document.documentElement) {\r\n        return new h(e);\r\n    }\r\n    static Element(e, t) {\r\n        return new _(e, { ...a, ...t });\r\n    }\r\n    onScroll(e) {\r\n        this._handler = e, this._onScroll();\r\n    }\r\n}\r\nclass h extends r {\r\n    constructor(e) {\r\n        super(), this._container = e, (e === document.documentElement ? window : e).addEventListener(\"scroll\", this._onScroll.bind(this));\r\n    }\r\n    _onScroll() {\r\n        const e = this._container.scrollTop, t = this._container.scrollHeight - this._container.clientHeight, n = s(e / t, 0, 1) || 0, i = this._container.scrollLeft, c = this._container.scrollWidth - this._container.clientWidth, l = s(i / c, 0, 1) || 0;\r\n        this._handler && typeof this._handler == \"function\" && requestAnimationFrame(() => this._handler({ percentageY: n, percentageX: l }));\r\n    }\r\n}\r\nclass _ extends r {\r\n    constructor(e, t) {\r\n        super(), this._element = e, this._options = t, this._lastPercentageY = null, this._lastPercentageX = null, this._options.addWrapper && this._addWrapper(), (this._options.container === document.documentElement ? window : this._options.container).addEventListener(\"scroll\", this._onScroll.bind(this)), requestAnimationFrame(() => this._onScroll());\r\n    }\r\n    _addWrapper() {\r\n        this._wrapper = document.createElement(\"div\"), this._options.wrapperClass && this._wrapper.classList.add(this._options.wrapperClass), this._element.parentNode.insertBefore(this._wrapper, this._element), this._wrapper.appendChild(this._element);\r\n    }\r\n    get _containerClientHeight() {\r\n        return this._options.container === window ? window.innerHeight : this._options.container.clientHeight;\r\n    }\r\n    get _containerClientWidth() {\r\n        return this._options.container === window ? window.innerWidth : this._options.container.clientWidth;\r\n    }\r\n    get _elRectRelativeToContainer() {\r\n        const t = (this._options.addWrapper ? this._wrapper : this._element).getBoundingClientRect();\r\n        if (this._options.container === document.documentElement)\r\n            return t;\r\n        const n = this._options.container.getBoundingClientRect();\r\n        return {\r\n            width: t.width,\r\n            height: t.width,\r\n            left: t.left - n.left,\r\n            top: t.top - n.top,\r\n            right: t.right - n.right,\r\n            bottom: t.bottom - n.bottom\r\n        };\r\n    }\r\n    // side is a string with possible values: Top/Bottom/Left/Right\r\n    getOffsetValue(e) {\r\n        const t = `offset${e}`;\r\n        return typeof this._options[t] == \"function\" ? this._options[t]() : this._options[t];\r\n    }\r\n    get _offsetBottom() {\r\n        return this.getOffsetValue(\"Bottom\");\r\n    }\r\n    get _offsetTop() {\r\n        return this.getOffsetValue(\"Top\");\r\n    }\r\n    get _offsetLeft() {\r\n        return this.getOffsetValue(\"Left\");\r\n    }\r\n    get _offsetRight() {\r\n        return this.getOffsetValue(\"Right\");\r\n    }\r\n    _calculatePercentageY() {\r\n        const e = this._elRectRelativeToContainer, t = this._containerClientHeight - this._offsetBottom, n = this._offsetTop, i = t - n;\r\n        return s((t - e.top) / i, 0, 1);\r\n    }\r\n    _calculatePercentageX() {\r\n        const e = this._elRectRelativeToContainer, t = this._containerClientWidth - this._offsetRight, n = this._offsetLeft, i = t - n;\r\n        return s((t - e.left) / i, 0, 1);\r\n    }\r\n    _onScroll() {\r\n        const e = this._calculatePercentageY(), t = this._calculatePercentageX();\r\n        this._handler && typeof this._handler == \"function\" && (this._lastPercentageY !== e || this._lastPercentageX !== t) && requestAnimationFrame(() => this._handler({ percentageY: e, percentageX: t })), this._lastPercentageY = e, this._lastPercentageX = t;\r\n    }\r\n}\r\n\r\nconst cardsContainer = document.querySelector('.work-type__items')\r\nconst cards = document.querySelectorAll('.work-card')\r\n\r\nif(cards.length>0){\r\n    cardsContainer.style.setProperty('--cards-count', cards.length)\r\n    cardsContainer.style.setProperty(\r\n        '--card-height',\r\n        `${cards[0].clientHeight}px`\r\n    )\r\n    Array.from(cards).forEach((card, index) => {\r\n        const offsetTop = 1.25 + index * 1.25\r\n        // card.style.paddingTop = `${offsetTop}em`\r\n        card.style.top = `${offsetTop * 3}em`\r\n        if(window.innerWidth<=992){\r\n            card.style.top = `${offsetTop * 2}em`\r\n        }\r\n        if (index === cards.length - 1) {\r\n            return\r\n        }\r\n        const toScale = 1 - (cards.length - 1 - index) * 0.05\r\n        const nextCard = cards[index + 1]\r\n        const cardInner = card.querySelector('.work-card__inner')\r\n        r.Element(nextCard, {\r\n            offsetTop,\r\n            offsetBottom: window.innerHeight - card.clientHeight\r\n        }).onScroll(({ percentageY }) => {\r\n            cardInner.style.scale = p({\r\n                from: 1,\r\n                to: toScale,\r\n                percentage: percentageY * 2\r\n            })\r\n            cardInner.style.filter = `brightness(${p({\r\n                from: 1,\r\n                to: 0.3,\r\n                percentage: percentageY\r\n            })})`\r\n        })\r\n    })\r\n}\r\n\r\n\r\n","let fileInput = document.querySelector(\"[data-upload-id='file-input']\")\r\n\r\nif(fileInput){\r\n    console.log(fileInput)\r\n    const upload = new FileUploadWithPreview.FileUploadWithPreview('file-input');\r\n\r\n    upload.options.multiple = true\r\n\r\n    $(document).on('change', '.input-container input', function(e) {\r\n        $(this).parents(\".file-input\").addClass(\"_uploaded\")\r\n    })\r\n\r\n    $(document).on('click', '.image-preview-item-clear', function(e) {\r\n        let count = $(this).parents(\".file-input\").find(\".image-preview-item\").length\r\n        if(count === 1){\r\n            $(this).parents(\".file-input\").removeClass(\"_uploaded\")\r\n        }\r\n    })\r\n}\r\n\r\n\r\n","let body = document.querySelector(\"body\")\nlet modalTogglers = document.querySelectorAll(\"[data-modal]\")\nlet modals = document.querySelectorAll(\".modal\")\n\nmodalTogglers.forEach(el => {\n    el.onclick = function () {\n        let modalId = el.getAttribute(\"data-modal\")\n        openModal(modalId)\n    }\n})\n\nfunction closeModals() {\n    modals.forEach(modal => {\n        modal.classList.remove(\"_active\")\n        body.classList.remove(\"fixed-body2\")\n        body.classList.remove(\"_open-modal\")\n    })\n}\n\nfunction openModal(modalId) {\n    closeModals()\n    let modal = document.querySelector(`#${modalId}`)\n    let closeButtons = modal.querySelectorAll(`._close-modal`)\n\n    modal.classList.add(\"_active\")\n    body.classList.add(\"fixed-body2\")\n    body.classList.add(\"_open-modal\")\n\n\n    closeButtons.forEach(btn => {\n        btn.onclick = ()=> {\n            modal.classList.remove(\"_active\")\n            body.classList.remove(\"fixed-body2\")\n            body.classList.remove(\"_open-modal\")\n        }\n    })\n}\n\nvar getScrollBarSize = (function() {\n    var el = window.document.createElement('textarea'), style = {\n        'visibility': 'hidden', 'position': 'absolute', 'zIndex': '-2147483647',\n        'top': '-1000px', 'left': '-1000px', 'width': '1000px', 'height': '1000px',\n        'overflow': 'scroll', 'margin': '0', 'border': '0', 'padding': '0'\n    }, support = el.clientWidth !== undefined && el.offsetWidth !== undefined;\n\n    for (var key in style) {\n        if (style.hasOwnProperty(key)) {\n            el.style[key] = style[key];\n        }\n    }\n\n    return function() {\n        var size = null;\n        if (support && window.document.body) {\n            window.document.body.appendChild(el);\n            size = [el.offsetWidth - el.clientWidth, el.offsetHeight - el.clientHeight];\n            window.document.body.removeChild(el);\n        }\n\n        document.documentElement.style.setProperty('--scrollWidth', `${size[0]}px`);\n        return size;\n    };\n})();\n\n","window.addEventListener('DOMContentLoaded', () => {\r\n    fix100vh();\r\n    window.addEventListener('resize', () => {\r\n        fix100vh();\r\n        getScrollBarSize()\r\n    })\r\n\r\n    getScrollBarSize()\r\n\r\n})\r\n\r\nfunction fix100vh() {\r\n    let vh = window.innerHeight * 0.01;\r\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\r\n}\r\n"]}